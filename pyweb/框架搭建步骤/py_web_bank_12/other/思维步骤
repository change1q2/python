
#思考步骤：
        
1.将重复的条件放入前置条件， 打开游览器，关闭游览器     
2.再写一个用例发现他们的执行逻辑是一样的就需要进行封装    
3.要将数据传入进去就用ddt数据驱动来管理数据    
4.进行函数封装，使用PO模式进行页面和数据的分离,将login重新定义一个函数,（函数封装以后的代码逻辑）  
5.进行类封装，将页面和代码逻辑进行分离，创建一个pages目录和datas目录    
6.进一步优化，发现断言的地方信息不一定一样所以将断言提取出来重新封装一个函数get_error_msg    
7.写一个登陆成功的，用例因为页面不一样了所以需要在pages中加入index_page    
8.做数据分离，建立一个data文件将将测试数据都丢到里面去,并用locatoe来进行分层路劲处理   
9.写一个登陆鉴权的操作，记住需要元素等待 因为弹出框可能会加载出来比较慢   

10.加入日志进行日志捕获   
   （1）对可能获取不到元素的地方加入异常捕获,所有元素获取的地方都要加（例如在index_bank_page中）
   （2）异常捕获需要截屏save_screenshot，创建一个config文件夹里面用constant文件保存路径配置文件
   
11.加入基业     
(1)考虑到异常捕获在每个元素的地方都要加太麻烦了，所以引入基业概念将常用的都放到基业     
(2)加入基页概念，创建一个common文件夹加入base_page,将常用的不改变的函数方法都放在基业里面  
(3)将基页中需要用的函数都导入到不同的地方，需要用到基页函数方法的地方都去继承基业的类就可以使用了  
   
12.pytest使用方式
70-71 pytest使用教程 
（1）pytest运行方式   
（2）修改用例自动发现规则,修改规则后它可以按照你的规则发现用例    
（3）打标签，想运行那个就运行那个   

 72-73-74 pytest详细用法，使用pytest框架修改一些代码，  
（1）打标签，注意要注册在pytest.ini配置文件中    
（2）创建测试套件   ,加入一个conftest.py文件管理前置条件将前置条件分离开来创建一个test_login_pytest.py的运行文件可以用这个框架启动
